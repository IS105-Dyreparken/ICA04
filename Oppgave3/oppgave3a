Pakker
Golang har flere pakker for å håndtere filer.
Os pakken har en del grunnleggende funksjoner for å
arbeide med filene. Io, ioutil og bufio pakkene har
ekstra funksjoner. Et eksempel er ioutil.WriteFile
som lager/åpner, skriver i og lukker en fil. Ved bruk
av os pakken må man bruke flere funksjoner som OpenFile,
Write og Close. Ioutil pakken gjør koden mindre og kjappere
å skrive.

Generelle Operasjoner
I golang har man flere funksjoner som brukes for å
arbeide med filer. Flere grunnleggende som å lage en
fil og slette den, gi nytt navn og flytte den, og åpne
og lukke den. Det er også funksjoner for informasjon
relatert til filen.

Write
Golang har funksjoner som skriver til filer. Det vil si
at et program kan endre dataen i en fil. Os.Write er en
funksjon som skriver til en fil. Generelt blir write brukt
som et uttrykk for å endre på en fil.
Hvis du bytter navn eller flytter en fil sier man at man
skriver filen til mappen.

Read
Likt skriving, golang kan også lese filer. Programmet
leser dataen i filen og gir resultatet som var spesifisert.
Ulikt skriving er det funksjoner i bufio pakken som ikke er
tilgjengelige i os.File eller io.Reader.

Buffering
Det er også mulig å skrive og lese med en buffer; programmet
håndterer data i minnet. Når du skriver med en buffer, skriver
du til filen i slices i stedet for byte til byte. Du kan for
eksempel skrive et vsist antall bytes i minne, før du bestemmer
å skrive til disk. Lesing bruker samme logikk. Du leser et
visst antall bytes i puljer.

Arkivere og Komprimere
Golang har også muligheten til å arkivere og komprimere
filer ved bruk av archive/zip og compress/gzip pakkene.
